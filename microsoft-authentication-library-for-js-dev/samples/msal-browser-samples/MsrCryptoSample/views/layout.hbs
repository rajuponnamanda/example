<!DOCTYPE html>
<html>
  <head>
    <title>{{title}}</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script type="text/javascript" src="./javascripts/msrcrypto.js"></script>
    <script src="../../lib/msal-browser.js"></script>
    
  </head>
  <body>
    {{{body}}}
    <script type="text/javascript">
        const entropy = Uint8Array.from([{{entropy}}]);
        const msalInstance = new msal.PublicClientApplication({
            auth: {
                clientId: "245e9392-c666-4d51-8f8a-bfd9e55b2456"
            },
            system: {
                loggerOptions: {
                    logLevel: msal.LogLevel.Trace,
                    loggerCallback: (level, message, containsPii) => {
                        if (containsPii) {	
                            return;	
                        }
                        switch (level) {	
                            case msal.LogLevel.Error:	
                                console.error(message);	
                                return;	
                            case msal.LogLevel.Info:	
                                console.info(message);	
                                return;	
                            case msal.LogLevel.Verbose:	
                                console.debug(message);	
                                return;	
                            case msal.LogLevel.Warning:	
                                console.warn(message);	
                                return;	
                            default:
                                console.log(message);
                                return;
                        }
                    }
                },
                cryptoOptions: {
                    useMsrCrypto: true,
                    entropy
                }
            }
        })

        msalInstance.handleRedirectPromise()
            .then(result => {
                console.log("result", result);

                if (result) {
                    msalInstance.setActiveAccount(result.account)
                } else if (msalInstance.getAllAccounts().length > 0) {
                    msalInstance.setActiveAccount(msalInstance.getAllAccounts()[0])
                }
            })
            .catch(error => {
                console.error(error);
            })

        document.getElementById("login").addEventListener("click", e => {
            msalInstance.loginRedirect();
        });

        document.getElementById("token").addEventListener("click", e => {
            msalInstance.acquireTokenSilent({
                scopes: [ "user.read" ]
            })
                .catch(error => {
                    if (error instanceof msal.InteractionRequiredAuthError) {
                        return msalInstance.acquireTokenPopup({
                            scopes: [ "user.read" ]
                        })
                    }

                    throw error;
                })
                .then(result => {
                    console.log("result", result);
                });
        });

        document.getElementById("logout").addEventListener("click", e => {
            msalInstance.logoutRedirect();
        });
    </script>
  </body>
</html>
